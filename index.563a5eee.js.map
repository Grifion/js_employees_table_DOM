{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAkKM,EACA,EAdA,EA9BE,EAvHF,EAAQ,SAAS,aAAa,CAAC,MAC/B,EAAQ,SAAS,aAAa,CAAC,SAC/B,GAgKA,EAAiB,GACjB,EAAY,CAAA,EAET,SAAC,CAAA,CAAO,CAAA,CAAY,CAA3B,EACE,IAAM,EAAI,EAAI,EAAU,QAAQ,EAC7B,GAAG,CAAC,SAAC,CADR,EACc,OAAA,EAAE,WAAW,AAAE,GAC1B,SAAS,CAAC,SAAC,CAAX,EAAiB,OAAA,IAAM,EAAW,WAAW,AAAG,EAE/C,CAAA,IAAmB,EAAW,WAAW,CAC3C,EAAY,CAAC,GAEb,EAAiB,EAAW,WAAW,CACvC,EAAY,CAAA,GAyBd,AAtBe,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAA9B,EAEE,IAAI,EAAO,EAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,SAAC,CAAhC,EAAsC,OAAA,EAAE,WAAW,AAAC,EAAA,CAAC,EAAE,CACnD,EAAO,EAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,SAAC,CAAhC,EAAsC,OAAA,EAAE,WAAW,AAAC,EAAA,CAAC,EAAE,OAQvD,CANgB,MAAZ,CAAI,CAAC,EAAE,GAET,EAAO,SAAS,EAAK,OAAO,CAAC,QAAS,KACtC,EAAO,SAAS,EAAK,OAAO,CAAC,QAAS,MAGpC,EAAO,GACF,EAAY,GAAK,EAGtB,EAAO,EACF,EAAY,EAAI,GAGlB,CACT,GAEO,OAAO,CAAC,SAAC,CAAhB,EAEE,EAAI,UAAU,CAAC,WAAW,CAAC,EAC7B,EACF,GAxMI,EAoJG,SAAC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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar thead = document.querySelector(\"tr\");\nvar tbody = document.querySelector(\"tbody\");\nvar sort = createSorter();\nvar active = createActivator();\nvar form = createForm();\nthead.addEventListener(\"click\", function(e) {\n    // call sort (rowsArray, comparator, comparators)\n    sort(_to_consumable_array(tbody.children), e.target.closest(\"th\"), thead);\n});\ntbody.addEventListener(\"click\", function(e) {\n    var row = e.target.closest(\"tr\");\n    active(row, \"active\");\n});\ntbody.addEventListener(\"dblclick\", function(e) {\n    e.preventDefault();\n    var cell = e.target.closest(\"td\");\n    var input = document.createElement(\"input\");\n    var prevValue = cell.textContent;\n    active(input, \"cell-input\");\n    input.value = cell.textContent;\n    cell.textContent = \"\";\n    cell.appendChild(input);\n    input.focus();\n    input.addEventListener(\"blur\", function() {\n        if (input.value.length === 0 || input.value !== new RegExp(\"^a-zA-Z0-9\")) cell.textContent = prevValue;\n        else cell.textContent = input.value;\n    });\n    input.addEventListener(\"keydown\", function(k) {\n        if (k.key === \"Enter\") {\n            if (input.value.length === 0 || input.value !== new RegExp(\"^a-zA-Z0-9\")) cell.textContent = prevValue;\n            else cell.textContent = input.value;\n        }\n    });\n});\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var data = new FormData(form);\n    var dName = data.get(\"name\");\n    var position = data.get(\"position\");\n    var office = data.get(\"office\");\n    var age = data.get(\"age\");\n    var salary = data.get(\"salary\");\n    if (validating(dName, age)) {\n        salary = \"$\".concat(parseInt(salary).toLocaleString(\"en-US\"));\n        addEmployee(dName, position, office, age, salary);\n    }\n});\nfunction validating(dName, position, age) {\n    var valid = true;\n    var type = \"success\";\n    var message = \"The new employee was successfully added to the table\";\n    if (dName.length < 4 || !/^[a-zA-Z0-9]+$/.test(dName)) {\n        type = \"error\";\n        message = \"Name is too short or has invalid characters\";\n        valid = false;\n    } else if (age < 18 || age > 99) {\n        type = \"error\";\n        message = \"Age value is less than 18 or more than 99\";\n        valid = false;\n    } else if (!/^[a-zA-Z0-9]+$/.test(position)) {\n        type = \"error\";\n        message = \"Position contains invalid characters\";\n        valid = false;\n    }\n    var nonfication = document.createElement(\"div\");\n    var title = document.createElement(\"h2\");\n    nonfication.className = \"notification \".concat(type);\n    title.className = \"title\";\n    title.textContent = message;\n    nonfication.append(title);\n    document.body.append(nonfication);\n    setTimeout(function() {\n        return nonfication.style.visibility = \"hidden\";\n    }, 1000);\n    return valid;\n}\nfunction addEmployee() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var newRow = document.createElement(\"tr\");\n    args.forEach(function(v) {\n        var newCell = document.createElement(\"td\");\n        newCell.textContent = v;\n        newRow.append(newCell);\n    });\n    tbody.append(newRow);\n}\nfunction createForm() {\n    var newForm = document.createElement(\"form\");\n    newForm.classList.add(\"new-employee-form\");\n    newForm.insertAdjacentHTML(\"afterbegin\", '\\n    <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\\n    <label>Position: <input name=\"position\" data-qa=\"position\" type=\"text\" required></label>\\n      <label>Office: <select name=\"office\" data-qa=\"office\">\\n        <option value=\"Tokyo\">Tokyo</option>\\n        <option value=\"Singapore\">Singapore</option>\\n        <option value=\"London\">London</option>\\n        <option value=\"New York\">New York</option>\\n        <option value=\"Edinburgh\">Edinburgh</option>\\n        <option value=\"San Francisco\">San Francisco</option>\\n      </select></label>\\n\\n      <label>Age: <input name=\"age\"  data-qa=\"age\" type=\"number\" required></label>\\n      <label>Salary: <input name=\"salary\"  data-qa=\"salary\" type=\"number\" required></label>\\n      <button type=\"submit\">Save to table</button>\\n    ');\n    document.body.append(newForm);\n    return newForm;\n}\nfunction createActivator() {\n    var prevActive;\n    return function(element, activatorClass) {\n        if (prevActive) prevActive.className = \"\";\n        element.classList.add(activatorClass);\n        prevActive = element;\n    };\n}\nfunction createSorter() {\n    var prevComparator = \"\";\n    var ascending = true;\n    return function(table, comparator, categorys) {\n        var i = _to_consumable_array(categorys.children).map(function(v) {\n            return v.textContent;\n        }) // get text from each 'th' element\n        .findIndex(function(v) {\n            return v === comparator.textContent;\n        }); // find comparator index\n        if (prevComparator === comparator.textContent) ascending = !ascending; // change sort direction\n        else {\n            prevComparator = comparator.textContent;\n            ascending = true;\n        }\n        var sorted = table.sort(function(a, b) {\n            // geting text content from a and b elements\n            var cola = _to_consumable_array(a.children).map(function(v) {\n                return v.textContent;\n            })[i];\n            var colb = _to_consumable_array(b.children).map(function(v) {\n                return v.textContent;\n            })[i];\n            if (cola[0] === \"$\") {\n                // parses a str and returns an int of salary\n                cola = parseInt(cola.replace(/[$,]/g, \"\"));\n                colb = parseInt(colb.replace(/[$,]/g, \"\"));\n            }\n            if (cola < colb) return ascending ? -1 : 1;\n            if (cola > colb) return ascending ? 1 : -1;\n            return 0;\n        });\n        sorted.forEach(function(row) {\n            // updating document\n            row.parentNode.appendChild(row);\n        });\n    };\n}\n\n//# sourceMappingURL=index.563a5eee.js.map\n","'use strict';\n\nconst thead = document.querySelector('tr');\nconst tbody = document.querySelector('tbody');\nconst sort = createSorter();\nconst active = createActivator();\nconst form = createForm();\n\nthead.addEventListener('click', (e) => {\n  // call sort (rowsArray, comparator, comparators)\n  sort([...tbody.children], e.target.closest('th'), thead);\n});\n\ntbody.addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n\n  active(row, 'active');\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  e.preventDefault();\n\n  const cell = e.target.closest('td');\n  const input = document.createElement('input');\n  const prevValue = cell.textContent;\n\n  active(input, 'cell-input');\n  input.value = cell.textContent;\n\n  cell.textContent = '';\n  cell.appendChild(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    if (input.value.length === 0 || input.value !== new RegExp('^a-zA-Z0-9')) {\n      cell.textContent = prevValue;\n    } else {\n      cell.textContent = input.value;\n    }\n  });\n\n  input.addEventListener('keydown', (k) => {\n    if (k.key === 'Enter') {\n      if (\n        input.value.length === 0 ||\n        input.value !== new RegExp('^a-zA-Z0-9')\n      ) {\n        cell.textContent = prevValue;\n      } else {\n        cell.textContent = input.value;\n      }\n    }\n  });\n});\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const dName = data.get('name');\n  const position = data.get('position');\n  const office = data.get('office');\n  const age = data.get('age');\n  let salary = data.get('salary');\n\n  if (validating(dName, age)) {\n    salary = `$${parseInt(salary).toLocaleString('en-US')}`;\n\n    addEmployee(dName, position, office, age, salary);\n  }\n});\n\nfunction validating(dName, position, age) {\n  let valid = true;\n  let type = 'success';\n  let message = 'The new employee was successfully added to the table';\n\n  if (dName.length < 4 || !/^[a-zA-Z0-9]+$/.test(dName)) {\n    type = 'error';\n    message = 'Name is too short or has invalid characters';\n    valid = false;\n  } else if (age < 18 || age > 99) {\n    type = 'error';\n    message = 'Age value is less than 18 or more than 99';\n    valid = false;\n  } else if (!/^[a-zA-Z0-9]+$/.test(position)) {\n    type = 'error';\n    message = 'Position contains invalid characters';\n    valid = false;\n  }\n\n  const nonfication = document.createElement('div');\n  const title = document.createElement('h2');\n\n  nonfication.className = `notification ${type}`;\n  title.className = 'title';\n\n  title.textContent = message;\n\n  nonfication.append(title);\n  document.body.append(nonfication);\n\n  setTimeout(() => (nonfication.style.visibility = 'hidden'), 1000);\n\n  return valid;\n}\n\nfunction addEmployee(...args) {\n  const newRow = document.createElement('tr');\n\n  args.forEach((v) => {\n    const newCell = document.createElement('td');\n\n    newCell.textContent = v;\n    newRow.append(newCell);\n  });\n\n  tbody.append(newRow);\n}\n\nfunction createForm() {\n  const newForm = document.createElement('form');\n\n  newForm.classList.add('new-employee-form');\n\n  newForm.insertAdjacentHTML(\n    'afterbegin',\n    `\n    <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n    <label>Position: <input name=\"position\" data-qa=\"position\" type=\"text\" required></label>\n      <label>Office: <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select></label>\n\n      <label>Age: <input name=\"age\"  data-qa=\"age\" type=\"number\" required></label>\n      <label>Salary: <input name=\"salary\"  data-qa=\"salary\" type=\"number\" required></label>\n      <button type=\"submit\">Save to table</button>\n    `,\n  );\n\n  document.body.append(newForm);\n\n  return newForm;\n}\n\nfunction createActivator() {\n  let prevActive;\n\n  return (element, activatorClass) => {\n    if (prevActive) {\n      prevActive.className = '';\n    }\n\n    element.classList.add(activatorClass);\n    prevActive = element;\n  };\n}\n\nfunction createSorter() {\n  let prevComparator = '';\n  let ascending = true;\n\n  return (table, comparator, categorys) => {\n    const i = [...categorys.children] // get array from all 'th' elements\n      .map((v) => v.textContent) // get text from each 'th' element\n      .findIndex((v) => v === comparator.textContent); // find comparator index\n\n    if (prevComparator === comparator.textContent) {\n      ascending = !ascending; // change sort direction\n    } else {\n      prevComparator = comparator.textContent;\n      ascending = true;\n    }\n\n    const sorted = table.sort((a, b) => {\n      // geting text content from a and b elements\n      let cola = [...a.children].map((v) => v.textContent)[i];\n      let colb = [...b.children].map((v) => v.textContent)[i];\n\n      if (cola[0] === '$') {\n        // parses a str and returns an int of salary\n        cola = parseInt(cola.replace(/[$,]/g, ''));\n        colb = parseInt(colb.replace(/[$,]/g, ''));\n      }\n\n      if (cola < colb) {\n        return ascending ? -1 : 1;\n      }\n\n      if (cola > colb) {\n        return ascending ? 1 : -1;\n      }\n\n      return 0;\n    });\n\n    sorted.forEach((row) => {\n      // updating document\n      row.parentNode.appendChild(row);\n    });\n  };\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","prevComparator","ascending","prevActive","newForm","thead","document","querySelector","tbody","sort","table","comparator","categorys","children","map","v","textContent","findIndex","sorted","a","b","cola","colb","parseInt","replace","forEach","row","parentNode","appendChild","active","element","activatorClass","className","classList","add","form","createElement","insertAdjacentHTML","body","append","addEventListener","e","target","closest","preventDefault","cell","input","prevValue","value","focus","RegExp","k","key","age","valid","type","message","nonfication","title","data","FormData","dName","get","position","office","salary","concat","setTimeout","style","visibility","addEmployee","_len","arguments","args","_key","newRow","newCell","toLocaleString"],"version":3,"file":"index.563a5eee.js.map"}